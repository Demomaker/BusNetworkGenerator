package net.demomaker.busnetworkgenerator.view;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;

public class HomePage extends JFrame {
    private static final int WIDTH = 1280;
    private static final int HEIGHT = 720;
    private static final String DEFAULT_TITLE = "Bus Network Generator";
    private static final String TITLE_FORMAT = "%s : %s, %s";
    private JPanel mainPanel;
    private JPanel mapPanel;
    private JPanel dataPanel;
    private JMenuBar jMenuBar;
    private JMenu file;
    private JMenu view;
    private JMenuItem open;
    private JMenuItem save;
    private JMenuItem export;
    private JMenuItem language;
    private JMenuItem costs;
    private JMenuItem stations;
    private JMenuItem recommended;
    private JTextField mapLink;
    private JButton generate;
    private JPanel bottomPanel;

    public HomePage() {
        this(DEFAULT_TITLE);
    }

    public HomePage(String title) {
        super(title);
        updateTitle();
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setContentPane(mainPanel);
        this.pack();
        this.addComponentListener(new ComponentAdapter() {
            public void componentResized(ComponentEvent componentEvent) {
                // do stuff
                updateTitle();
            }
        });
        this.setSize(WIDTH, HEIGHT);
        this.setJMenuBar(jMenuBar);
        createUIComponents();
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        mapPanel = new JMapPanel();
    }

    private void updateTitle() {
        setTitle(String.format(TITLE_FORMAT, DEFAULT_TITLE, getSize().width, getSize().height));
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.setMinimumSize(new Dimension(-1, -1));
        mainPanel.setPreferredSize(new Dimension(-1, -1));
        jMenuBar = new JMenuBar();
        jMenuBar.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        mainPanel.add(jMenuBar, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        file = new JMenu();
        file.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        file.setName("");
        file.setText("File");
        jMenuBar.add(file);
        open = new JMenuItem();
        open.setText("Open");
        file.add(open);
        save = new JMenuItem();
        save.setText("Save");
        file.add(save);
        export = new JMenuItem();
        export.setText("Export");
        file.add(export);
        language = new JMenuItem();
        language.setText("Language");
        file.add(language);
        view = new JMenu();
        view.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        view.setText("View");
        jMenuBar.add(view);
        costs = new JMenuItem();
        costs.setText("Costs");
        view.add(costs);
        stations = new JMenuItem();
        stations.setText("Stations");
        view.add(stations);
        recommended = new JMenuItem();
        recommended.setText("Recommended");
        view.add(recommended);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        mainPanel.add(panel1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dataPanel = new JPanel();
        dataPanel.setLayout(new BorderLayout(0, 0));
        panel1.add(dataPanel, BorderLayout.NORTH);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        dataPanel.add(panel2, BorderLayout.CENTER);
        mapLink = new JTextField();
        mapLink.setMargin(new Insets(2, 6, 2, 6));
        panel2.add(mapLink, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        dataPanel.add(panel3, BorderLayout.EAST);
        generate = new JButton();
        generate.setText("Generate");
        panel3.add(generate, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mapPanel = new JPanel();
        mapPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(mapPanel, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(24, 364), null, 0, false));
        mapPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
